#!/usr/bin/env python

"""
Take all LJH files in 1+ directories and generate a clickhouse database from them.
Requires a local clickhouse server to be running.

Usage:

ljh2clickhouse [options] dbname ljhdir1 [ljhdir2...]

will create a database named `dbname` based on the LJH files in the named directories.
"""

import argparse
import glob
import os
import sys
from collections import OrderedDict
import clickhouse_connect
import numpy as np
import mass


class clickDB:
    def __init__(self, host="localhost", username="default", password=""):
        self.client = clickhouse_connect.get_client(host=host, username=username, password=password)

    def close(self):
        self.client.close()

    def create(self, dbname, force=False):
        if force:
            q = f"DROP DATABASE IF EXISTS {dbname}"
            self.client.command(q)

        q = f"CREATE DATABASE {dbname}"
        self.client.command(q)

        q = f"USE {dbname}"
        self.client.command(q)

        q = """CREATE TABLE pulses"""
        # Create 3 key tables
        # Maybe create experiment-state table?
        # Maybe create external trigger table?
        self.runs = 0

    def fill_one_run(self, dir, files):
        ljhfiles = [mass.files.LJHFile.open(f) for f in files]
        assert len(ljhfiles)
        ljh = ljhfiles[0]
        timebase = ljh.timebase
        nSamples = ljh.nSamples
        nPresamples = ljh.nPresamples
        base = os.path.split(dir)[1]
        # Insert into dataruns table, using base directory name
        for ljh in ljhfiles:
            assert timebase == ljh.timebase
            assert nSamples == ljh.nSamples
            assert nPresamples == ljh.nPresamples
            # Insert into channels table
            # Insert into pulses table


def convert(args):
    allfiles = glob_files(args.directory)
    print(args)
    Ndir = len(allfiles)
    Nljh = np.sum([len(v) for v in allfiles.values()])
    print(f"Found {Nljh} LJH files in {Ndir} directories")
    if Nljh <= 0:
        print("The directory argument(s) had no LJH files")
        sys.exit(1)

    try:
        DB = clickDB()
        DB.create(args.database, args.force)
        for (d, files) in allfiles.items():
            DB.fill_one_run(d, files)
    finally:
        DB.close()


def glob_files(directories):
    allfiles = OrderedDict()
    for d in directories:
        if not os.path.isdir(d):
            continue
        files = glob.glob(f"{d}/*_chan*.ljh")
        if len(files) > 0:
            allfiles[d] = files
    return allfiles


def main():
    parser = argparse.ArgumentParser(description='Import a set of LJH files into a clickhouse database')
    parser.add_argument('-f', '--force', action='store_true', default=False,
                        help='whether to truncate all tables in named database, if they exist')
    parser.add_argument('database',
                        type=str,
                        help='database name to store in')
    parser.add_argument('directory',
                        type=str,
                        nargs='+',
                        help='string to append to basename when creating output filename')
    args = parser.parse_args()
    convert(args)


if __name__ == "__main__":
    main()
